{% extends '::base.html.twig' %}

{% form_theme form "form_themes.html.twig" %}

{% trans_default_domain "tools" %}

{% block body %}

    {{ form_start(form,{ 'attr' : { 'class' : 'wmw-onboard wmw-onboard--pitch col-xs-10 col-xs-offset-1 col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3' }}) }}

        <div class="wmw-onboard-body">

            <h1>
                {{ 'mission.new.step_two.title' | trans }}
                <small>{{ 'mission.new.step_two.subtitle' | trans }}</small>
            </h1>

            <div class="wmw-sectionfield">
                <label class="wmw-label">{{ 'businesspractice.title' | trans }}</label>
            </div>

            <div class="wmw-onboard-businesses row">
                {% for key, businessPractice in form.businessPractice %}
                    <div class="wmw-iconfield col-xs-6 col-sm-4">

                        {{ form_widget(businessPractice, {'attr' : {
                            class : 'requiredgroup:businesses vv-ggparent',
                            name  : "businesses[]",
                            id    : "business-" ~ businessPractice.vars.id
                        }}) }}

                        <label for="{{ businessPractice.vars.id }}">
                        <span>
                            <i class="icon icon--business-{{ arrayImg[businessPractice.vars.label] }}"></i><br/>
                            {{ businessPractice.vars.label | trans }}
                        </span>
                        </label>
                    </div>
                {% endfor %}
                {{ form_errors(form.businessPractice) }}
            </div>

            <div class="wmw-fieldrow row">
                <label class="wmw-label wmw-label--topmobile col-xs-12 col-sm-5"
                       for="wmw-pitch&-domain">{{ 'professionalexpertises.title' | trans }}</label>
                {{ form_widget(form.professionalExpertise, { 'attr': { 'class': 'required col-xs-12 col-md-6' }}) }}
                {{ form_errors(form.professionalExpertise) }}
            </div>

            <div class="wmw-fieldrow row">
                <label class="wmw-label wmw-label--topmobile col-xs-12 col-sm-5"
                       for="wmw-pitch-budget">{{ 'mission.new.label.budget' | trans }}</label>
                {{ form_widget(form.budget, {'attr': { 'class': 'required col-xs-12 col-md-6'}}) }}
                {{ form_errors(form.budget) }}
            </div>

            <div class="wmw-fieldrow row">
                <label class="wmw-label wmw-label--topmobile col-xs-12 col-sm-5"
                       for="wmw-pitch-currency">{{ 'mission.new.label.currency' | trans }}</label>
                {{ form_widget(form.currency, {'attr': { 'class': 'required col-xs-12 col-md-6'}}) }}
                {{ form_errors(form.currency) }}
            </div>

            <div class="wmw-onboard-blocks row">
                {% for key, val in form.continents %}
                    <div class="wmw-onboard-blocks-el col-xs-6 col-md-3">
                        <label for="{{ val.vars.id }}">{{ form_label(val) }}</label>
                        <div class="wmw-switchfield">
                            {{ form_widget(val, { 'attr' : { 'class' : 'requiredgroup:wmw-pitch-region vv-ggparent' }}) }}
                            <label for="{{ val.vars.id }}"></label>
                        </div>
                    </div>
                {% endfor %}
                {{ form_errors(form.continents) }}
            </div>


            <div class="wmw-fieldrow row">
                <label class="wmw-label wmw-label--topmobile col-xs-12 col-sm-5">{{ 'mission.new.label.applicationEnding' | trans }}</label>
                <div class="col-xs-12 col-md-6 row">
                    {{ form_widget(form.applicationEnding, {'attr': { 'class': ' col-xs-12 col-md-6'}}) }}
                </div>
                {{ form_errors(form.applicationEnding) }}
            </div>

            <div class="wmw-fieldrow row">
                <label class="wmw-label wmw-label--topmobile col-xs-12 col-sm-5">{{ 'mission.new.label.missionBeginning' | trans }}</label>
                <div class="col-xs-12 col-md-6 row">
                    {{ form_widget(form.missionBeginning, {'attr': { 'class': ' col-xs-12 col-md-6'}}) }}
                </div>
                {{ form_errors(form.missionBeginning) }}
            </div>

            <div class="wmw-fieldrow row">
                <label class="wmw-label wmw-label--topmobile col-xs-12 col-sm-5">{{ 'mission.new.label.missionEnding' | trans }}</label>
                <div class="col-xs-12 col-md-6 row">
                    {{ form_widget(form.missionEnding, {'attr': { 'class': ' col-xs-12 col-md-6'}}) }}
                </div>
                {{ form_errors(form.missionEnding) }}
            </div>

            <div class="wmw-onboard-blocks row">
                <div class="wmw-onboard-blocks-el col-xs-12 col-md-6">
                    <label for="{{ form.confidentiality.vars.id }}">{{ 'mission.new.label.confidentiality' | trans }}</label>
                    <div class="wmw-switchfield">
                        {{ form_widget(form.confidentiality) }}
                        <label for="{{ form.confidentiality.vars.id }}"></label>
                    </div>
                </div>
                <div class="wmw-onboard-blocks-el col-xs-12 col-md-6" id="wmw-pitch-onsite-wrapper">
                    <label for="{{ (form.telecommuting.vars.id) }}">{{ 'mission.new.label.telecommuting' | trans }}</label>
                <div class="wmw-switchfield">
                    {{ form_widget(form.telecommuting) }}
                    <label for="{{ form.telecommuting.vars.id }}"></label>
                </div>
                    {{ form_widget(form.address.country) }}
                </div>
            </div>
            {{ form_errors(form.confidentiality) }}
            {{ form_errors(form.telecommuting) }}
            {{ form_errors(form.address) }}
            {{ form_errors(form) }}

            <div class="wmw-progressbar">
                <span class="active"></span>
                <span class="active"></span>
                <span></span>
                <span></span>
                <span></span>
            </div>
        </div>

    <div class="wmw-onboard-bottom">
        {% set late = '<i></i><span>' ~ form.forLater.vars.label | trans  ~ '</span><i></i>' %}
        {{ form_widget(form.forLater, {attr: { formnovalidate: 'formnovalidate',
            class: 'wmw-button wmw-button--black wmw-button--border wmw-onboard-bottom-left wmw-button-later'}, label: late }) }}

        {% set back = '<i></i><span>' ~ form.back.vars.label | trans ~ '</span><i></i>' %}
        {{ form_widget(form.back, {attr: { formnovalidate: 'formnovalidate',
            class: 'wmw-button wmw-button--border wmw-button-later'}, label: back }) }}

        {% set next = '<i></i><span>' ~ form.next.vars.label | trans ~ '</span><i></i>' %}
        {{ form_widget(form.next, { 'attr' : { 'class' : 'wmw-button wmw-button--green  wmw-button-later'}, label: next}) }}
    </div>

    {{ form_end(form) }}

    <div class="wmw-onboard-text col-md-2">
        {{ 'mission.new.step_two.hint' | trans | raw }}
    </div>

{% endblock %}

{% block javascripts %}

    {{ parent() }}

    <script type="text/javascript">

        $(document).ready(function() {

            sortSelectOptions('#step_two_form_professionalExpertise', true);
            sortSelectOptions('#step_two_form_currency', false);

            var arrayOpt = {
                defaultDate: "+1w",
                changeMonth: true,
                changeYear: true,
                numberOfMonths: 1
            };

            $( ".myDatePicker" ).datepicker(arrayOpt);

            var dateFormat = "mm/dd/yy",
                from = $( "#step_two_form_applicationEnding" )
                    .datepicker(arrayOpt)
                    .on( "change", function() {
                        var date = getDate( this );

                        to.datepicker( "option", "minDate", getDate( this ));
                        date.setDate(getDate( this ).getDate() + 1);
                        to.datepicker( "setDate", date );

                        end.datepicker( "option", "minDate", getDate( this ));
                        date.setDate(getDate( this ).getDate() + 2);
                        end.datepicker( "setDate", date );

                        from.removeClass("invalid");

                    }),
                to = $( "#step_two_form_missionBeginning" )
                    .datepicker(arrayOpt)
                    .on( "change", function() {
                        var date = getDate( this );

                        end.datepicker( "option", "minDate", getDate( this ));
                        date.setDate(getDate( this ).getDate() + 1);
                        end.datepicker( "setDate", date );
                    }),
                end = $( "#step_two_form_missionEnding" )
                    .datepicker(arrayOpt);

            function getDate( element ) {
                var date;
                try {
                    date = $.datepicker.parseDate( dateFormat, element.value );
                } catch( error ) {
                    date = null;
                }

                return date;
            }
        });


    </script>

{% endblock %}