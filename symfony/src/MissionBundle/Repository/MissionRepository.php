<?php

namespace MissionBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MissionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MissionRepository extends EntityRepository
{
    public function expertMissionsAvailables()
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('m')
        ->from('MissionBundle:Mission', 'm')
        ->where('m.status = 1')
        ->orderBy('m.applicationEnding', 'DESC');
        return $qb->getQuery()->getResult();
    }

    public function myMissions($userID)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('t', 'u')
        ->from('TeamBundle:Team', 't')
        ->leftjoin('t.users', 'u')
        ->where('u.id = :userID')
            ->setParameter('userID', $userID);
        return $qb->getQuery()->getResult();
    }

    public function teamsAvailables($missionId, $step)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('t', 'm')
        ->from('TeamBundle:Team', 't')
        ->leftjoin('t.mission', 'm')
        ->where('m.id = :missionId')
            ->setParameter('missionId', $missionId)
        ->andWhere('t.role = 0')
        ->andWhere('t.status = :pos')
            ->setParameter('pos', $step->getPosition());
        if($step->getPosition() == 1) {
            $qb->orWhere('t.status = 0');
        }
        $qb->orderBy('t.creationDate', 'ASC')
        ->setMaxResults($step->getNbMaxTeam());
        return $qb->getQuery()->getResult();
    }

    public function getSpecificStep($missionId, $stepPos)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('s', 'm')
        ->from('MissionBundle:Step', 's')
        ->leftjoin('s.mission', 'm')
        ->where('m.id = :missionId')
            ->setParameter('missionId', $missionId)
        ->andWhere('s.position = :stepPos')
            ->setParameter('stepPos', $stepPos);
        return $qb->getQuery()->getResult();
    }

    public function getCurrentStep($missionId)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('s', 'm')
        ->from('MissionBundle:Step', 's')
        ->leftjoin('s.mission', 'm')
        ->where('m.id = :missionId')
            ->setParameter('missionId', $missionId)
        ->andWhere('s.status = 1');
        return $qb->getQuery()->getResult();
    }
}
