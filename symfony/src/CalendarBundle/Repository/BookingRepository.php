<?php

namespace CalendarBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use CalendarBundle\Entity\EventEntity;
use Doctrine\ORM\EntityManager;
use CalendarBundle\Repository\BookingsRepository;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use CalendarBundle\Entity\Booking;

/**
 * BookingsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BookingRepository extends EntityRepository
{

    public function getBookings($calendarId)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('b.id', 'b.start', 'b.end', 'b.title', 'b.status', 'c.id calendarId')
            ->from('CalendarBundle:Booking', 'b')
            ->leftjoin('b.calendar', 'c')
            ->where('c.id  = :calendarId')
                ->setParameter('calendarId', $calendarId);
        return $qb->getQuery()->getArrayResult();
    }

    public function getBookingsByStart($calendarId, $start)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('a')
            ->from('CalendarBundle:Booking', 'a')
            ->where('a.start = :start')
                ->setParameter('start', new \Datetime($start))
            ->andWhere('a.calendar = :calendarId')
                ->setParameter('calendarId', $calendarId);
        return $qb->getQuery()->getResult();
    }
}
